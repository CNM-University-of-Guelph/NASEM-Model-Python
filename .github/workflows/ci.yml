name: Main Branch CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Miniforge
      if: runner.os != 'Windows'
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: "latest"
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge

    - name: Create and activate Conda environment
      if: runner.os != 'Windows'
      run: |
        conda create --name nasem_env python=${{ matrix.python-version }} -y
        echo "Conda environment created"
        conda activate nasem_env

    - name: Install graph-tool
      if: runner.os != 'Windows'
      run: |
        conda install -c conda-forge graph-tool -y
        echo "graph-tool installed"
  
    - name: Install Poetry
      if: runner.os != 'Windows'
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "Poetry installed"

    - name: Install Dependencies using Poetry
      if: runner.os != 'Windows'
      run: |
        poetry install
        echo "Dependencies installed"

    - name: Run Tests
      if: runner.os != 'Windows'
      run: |
        pytest --cov=nasem_dairy --cov-report=xml --cov-report=term-missing
        echo "Tests run successfully"
  
    - name: Report Coverage to Coveralls
      if: runner.os != 'Windows'
      run: |
        pip install coveralls
        coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    - name: Install Poetry on Windows
      if: runner.os == 'Windows'
      run: |
        (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
  
    - name: Install Dependencies and Run Tests on Windows
      if: runner.os == 'Windows'
      run: |
        C:/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry install
        C:/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry add importlib_resources
        pytest --cov=nasem_dairy --cov-report=xml --cov-report=term-missing
        pip install coveralls
        coveralls
      env:
        POETRY_VIRTUALENVS_CREATE: false
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      